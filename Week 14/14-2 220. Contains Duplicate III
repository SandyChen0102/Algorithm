class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int indexDiff, int valueDiff) {
        if (valueDiff < 0) return false;

        unordered_map<long, long> b; // b: bucket map
        long size = (long)valueDiff + 1;

        for (int i = 0; i < nums.size(); ++i) {
            long num = (long)nums[i];
            long id = num / size;
            if (num < 0) --id;  // 負數調整桶索引

            if (b.count(id)) return true;
            if (b.count(id - 1) && abs(num - b[id - 1]) <= valueDiff) return true;
            if (b.count(id + 1) && abs(num - b[id + 1]) <= valueDiff) return true;

            b[id] = num;

            if (i >= indexDiff) {
                long oldId = (long)nums[i - indexDiff] / size;
                if (nums[i - indexDiff] < 0) --oldId;
                b.erase(oldId);
            }
        }

        return false;
    }
};
